
msg:     file format elf64-x86-64


Disassembly of section .init:

0000000000000628 <_init>:
 628:	48 83 ec 08          	sub    $0x8,%rsp
 62c:	48 8b 05 b5 09 20 00 	mov    0x2009b5(%rip),%rax        # 200fe8 <_GLOBAL_OFFSET_TABLE_+0x58>
 633:	48 85 c0             	test   %rax,%rax
 636:	74 02                	je     63a <_init+0x12>
 638:	ff d0                	callq  *%rax
 63a:	48 83 c4 08          	add    $0x8,%rsp
 63e:	c3                   	retq   

Disassembly of section .plt:

0000000000000640 <puts@plt-0x10>:
 640:	ff 35 52 09 20 00    	pushq  0x200952(%rip)        # 200f98 <_GLOBAL_OFFSET_TABLE_+0x8>
 646:	ff 25 54 09 20 00    	jmpq   *0x200954(%rip)        # 200fa0 <_GLOBAL_OFFSET_TABLE_+0x10>
 64c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000650 <puts@plt>:
 650:	ff 25 52 09 20 00    	jmpq   *0x200952(%rip)        # 200fa8 <_GLOBAL_OFFSET_TABLE_+0x18>
 656:	68 00 00 00 00       	pushq  $0x0
 65b:	e9 e0 ff ff ff       	jmpq   640 <_init+0x18>

0000000000000660 <strlen@plt>:
 660:	ff 25 4a 09 20 00    	jmpq   *0x20094a(%rip)        # 200fb0 <_GLOBAL_OFFSET_TABLE_+0x20>
 666:	68 01 00 00 00       	pushq  $0x1
 66b:	e9 d0 ff ff ff       	jmpq   640 <_init+0x18>

0000000000000670 <__stack_chk_fail@plt>:
 670:	ff 25 42 09 20 00    	jmpq   *0x200942(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x28>
 676:	68 02 00 00 00       	pushq  $0x2
 67b:	e9 c0 ff ff ff       	jmpq   640 <_init+0x18>

0000000000000680 <fgets@plt>:
 680:	ff 25 3a 09 20 00    	jmpq   *0x20093a(%rip)        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x30>
 686:	68 03 00 00 00       	pushq  $0x3
 68b:	e9 b0 ff ff ff       	jmpq   640 <_init+0x18>

0000000000000690 <popen@plt>:
 690:	ff 25 32 09 20 00    	jmpq   *0x200932(%rip)        # 200fc8 <_GLOBAL_OFFSET_TABLE_+0x38>
 696:	68 04 00 00 00       	pushq  $0x4
 69b:	e9 a0 ff ff ff       	jmpq   640 <_init+0x18>

00000000000006a0 <exit@plt>:
 6a0:	ff 25 2a 09 20 00    	jmpq   *0x20092a(%rip)        # 200fd0 <_GLOBAL_OFFSET_TABLE_+0x40>
 6a6:	68 05 00 00 00       	pushq  $0x5
 6ab:	e9 90 ff ff ff       	jmpq   640 <_init+0x18>

Disassembly of section .plt.got:

00000000000006b0 <.plt.got>:
 6b0:	ff 25 42 09 20 00    	jmpq   *0x200942(%rip)        # 200ff8 <_GLOBAL_OFFSET_TABLE_+0x68>
 6b6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000006c0 <_start>:
 6c0:	31 ed                	xor    %ebp,%ebp
 6c2:	49 89 d1             	mov    %rdx,%r9
 6c5:	5e                   	pop    %rsi
 6c6:	48 89 e2             	mov    %rsp,%rdx
 6c9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 6cd:	50                   	push   %rax
 6ce:	54                   	push   %rsp
 6cf:	4c 8d 05 4a 03 00 00 	lea    0x34a(%rip),%r8        # a20 <__libc_csu_fini>
 6d6:	48 8d 0d d3 02 00 00 	lea    0x2d3(%rip),%rcx        # 9b0 <__libc_csu_init>
 6dd:	48 8d 3d 8e 02 00 00 	lea    0x28e(%rip),%rdi        # 972 <main>
 6e4:	ff 15 f6 08 20 00    	callq  *0x2008f6(%rip)        # 200fe0 <_GLOBAL_OFFSET_TABLE_+0x50>
 6ea:	f4                   	hlt    
 6eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000006f0 <deregister_tm_clones>:
 6f0:	48 8d 3d 19 09 20 00 	lea    0x200919(%rip),%rdi        # 201010 <__TMC_END__>
 6f7:	55                   	push   %rbp
 6f8:	48 8d 05 11 09 20 00 	lea    0x200911(%rip),%rax        # 201010 <__TMC_END__>
 6ff:	48 39 f8             	cmp    %rdi,%rax
 702:	48 89 e5             	mov    %rsp,%rbp
 705:	74 19                	je     720 <deregister_tm_clones+0x30>
 707:	48 8b 05 ca 08 20 00 	mov    0x2008ca(%rip),%rax        # 200fd8 <_GLOBAL_OFFSET_TABLE_+0x48>
 70e:	48 85 c0             	test   %rax,%rax
 711:	74 0d                	je     720 <deregister_tm_clones+0x30>
 713:	5d                   	pop    %rbp
 714:	ff e0                	jmpq   *%rax
 716:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 71d:	00 00 00 
 720:	5d                   	pop    %rbp
 721:	c3                   	retq   
 722:	0f 1f 40 00          	nopl   0x0(%rax)
 726:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 72d:	00 00 00 

0000000000000730 <register_tm_clones>:
 730:	48 8d 3d d9 08 20 00 	lea    0x2008d9(%rip),%rdi        # 201010 <__TMC_END__>
 737:	48 8d 35 d2 08 20 00 	lea    0x2008d2(%rip),%rsi        # 201010 <__TMC_END__>
 73e:	55                   	push   %rbp
 73f:	48 29 fe             	sub    %rdi,%rsi
 742:	48 89 e5             	mov    %rsp,%rbp
 745:	48 c1 fe 03          	sar    $0x3,%rsi
 749:	48 89 f0             	mov    %rsi,%rax
 74c:	48 c1 e8 3f          	shr    $0x3f,%rax
 750:	48 01 c6             	add    %rax,%rsi
 753:	48 d1 fe             	sar    %rsi
 756:	74 18                	je     770 <register_tm_clones+0x40>
 758:	48 8b 05 91 08 20 00 	mov    0x200891(%rip),%rax        # 200ff0 <_GLOBAL_OFFSET_TABLE_+0x60>
 75f:	48 85 c0             	test   %rax,%rax
 762:	74 0c                	je     770 <register_tm_clones+0x40>
 764:	5d                   	pop    %rbp
 765:	ff e0                	jmpq   *%rax
 767:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 76e:	00 00 
 770:	5d                   	pop    %rbp
 771:	c3                   	retq   
 772:	0f 1f 40 00          	nopl   0x0(%rax)
 776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 77d:	00 00 00 

0000000000000780 <__do_global_dtors_aux>:
 780:	80 3d 89 08 20 00 00 	cmpb   $0x0,0x200889(%rip)        # 201010 <__TMC_END__>
 787:	75 2f                	jne    7b8 <__do_global_dtors_aux+0x38>
 789:	48 83 3d 67 08 20 00 	cmpq   $0x0,0x200867(%rip)        # 200ff8 <_GLOBAL_OFFSET_TABLE_+0x68>
 790:	00 
 791:	55                   	push   %rbp
 792:	48 89 e5             	mov    %rsp,%rbp
 795:	74 0c                	je     7a3 <__do_global_dtors_aux+0x23>
 797:	48 8b 3d 6a 08 20 00 	mov    0x20086a(%rip),%rdi        # 201008 <__dso_handle>
 79e:	e8 0d ff ff ff       	callq  6b0 <exit@plt+0x10>
 7a3:	e8 48 ff ff ff       	callq  6f0 <deregister_tm_clones>
 7a8:	c6 05 61 08 20 00 01 	movb   $0x1,0x200861(%rip)        # 201010 <__TMC_END__>
 7af:	5d                   	pop    %rbp
 7b0:	c3                   	retq   
 7b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 7b8:	f3 c3                	repz retq 
 7ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000007c0 <frame_dummy>:
 7c0:	55                   	push   %rbp
 7c1:	48 89 e5             	mov    %rsp,%rbp
 7c4:	5d                   	pop    %rbp
 7c5:	e9 66 ff ff ff       	jmpq   730 <register_tm_clones>

00000000000007ca <print_msg>:
 7ca:	55                   	push   %rbp
 7cb:	48 89 e5             	mov    %rsp,%rbp
 7ce:	53                   	push   %rbx
 7cf:	48 81 ec 48 04 00 00 	sub    $0x448,%rsp
 7d6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 7dd:	00 00 
 7df:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 7e3:	31 c0                	xor    %eax,%eax
 7e5:	48 8d 35 50 02 00 00 	lea    0x250(%rip),%rsi        # a3c <FAIL+0x4>
 7ec:	48 8d 3d 4b 02 00 00 	lea    0x24b(%rip),%rdi        # a3e <FAIL+0x6>
 7f3:	e8 98 fe ff ff       	callq  690 <popen@plt>
 7f8:	48 89 85 c0 fb ff ff 	mov    %rax,-0x440(%rbp)
 7ff:	48 83 bd c0 fb ff ff 	cmpq   $0x0,-0x440(%rbp)
 806:	00 
 807:	75 0c                	jne    815 <print_msg+0x4b>
 809:	b8 01 00 00 00       	mov    $0x1,%eax
 80e:	89 c7                	mov    %eax,%edi
 810:	e8 8b fe ff ff       	callq  6a0 <exit@plt>
 815:	90                   	nop
 816:	48 8b 95 c0 fb ff ff 	mov    -0x440(%rbp),%rdx
 81d:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
 824:	be 0a 04 00 00       	mov    $0x40a,%esi
 829:	48 89 c7             	mov    %rax,%rdi
 82c:	e8 4f fe ff ff       	callq  680 <fgets@plt>
 831:	48 85 c0             	test   %rax,%rax
 834:	75 e0                	jne    816 <print_msg+0x4c>
 836:	c7 85 b4 fb ff ff 00 	movl   $0x0,-0x44c(%rbp)
 83d:	00 00 00 
 840:	eb 3d                	jmp    87f <print_msg+0xb5>
 842:	48 8b 15 cf 07 20 00 	mov    0x2007cf(%rip),%rdx        # 201018 <MSG>
 849:	8b 85 b4 fb ff ff    	mov    -0x44c(%rbp),%eax
 84f:	48 98                	cltq   
 851:	48 01 d0             	add    %rdx,%rax
 854:	0f b6 10             	movzbl (%rax),%edx
 857:	8b 85 b4 fb ff ff    	mov    -0x44c(%rbp),%eax
 85d:	48 98                	cltq   
 85f:	0f b6 84 05 d0 fb ff 	movzbl -0x430(%rbp,%rax,1),%eax
 866:	ff 
 867:	31 c2                	xor    %eax,%edx
 869:	8b 85 b4 fb ff ff    	mov    -0x44c(%rbp),%eax
 86f:	48 98                	cltq   
 871:	88 94 05 ca fb ff ff 	mov    %dl,-0x436(%rbp,%rax,1)
 878:	83 85 b4 fb ff ff 01 	addl   $0x1,-0x44c(%rbp)
 87f:	8b 85 b4 fb ff ff    	mov    -0x44c(%rbp),%eax
 885:	48 63 d8             	movslq %eax,%rbx
 888:	48 8b 05 89 07 20 00 	mov    0x200789(%rip),%rax        # 201018 <MSG>
 88f:	48 89 c7             	mov    %rax,%rdi
 892:	e8 c9 fd ff ff       	callq  660 <strlen@plt>
 897:	48 39 c3             	cmp    %rax,%rbx
 89a:	72 a6                	jb     842 <print_msg+0x78>
 89c:	c7 85 b8 fb ff ff 00 	movl   $0x0,-0x448(%rbp)
 8a3:	00 00 00 
 8a6:	eb 2b                	jmp    8d3 <print_msg+0x109>
 8a8:	8b 85 b8 fb ff ff    	mov    -0x448(%rbp),%eax
 8ae:	48 98                	cltq   
 8b0:	0f b6 84 05 ca fb ff 	movzbl -0x436(%rbp,%rax,1),%eax
 8b7:	ff 
 8b8:	83 c0 20             	add    $0x20,%eax
 8bb:	89 c2                	mov    %eax,%edx
 8bd:	8b 85 b8 fb ff ff    	mov    -0x448(%rbp),%eax
 8c3:	48 98                	cltq   
 8c5:	88 94 05 ca fb ff ff 	mov    %dl,-0x436(%rbp,%rax,1)
 8cc:	83 85 b8 fb ff ff 01 	addl   $0x1,-0x448(%rbp)
 8d3:	8b 85 b8 fb ff ff    	mov    -0x448(%rbp),%eax
 8d9:	48 63 d8             	movslq %eax,%rbx
 8dc:	48 8d 85 ca fb ff ff 	lea    -0x436(%rbp),%rax
 8e3:	48 89 c7             	mov    %rax,%rdi
 8e6:	e8 75 fd ff ff       	callq  660 <strlen@plt>
 8eb:	48 39 c3             	cmp    %rax,%rbx
 8ee:	72 b8                	jb     8a8 <print_msg+0xde>
 8f0:	c7 85 bc fb ff ff 00 	movl   $0x0,-0x444(%rbp)
 8f7:	00 00 00 
 8fa:	eb 2b                	jmp    927 <print_msg+0x15d>
 8fc:	8b 85 bc fb ff ff    	mov    -0x444(%rbp),%eax
 902:	48 98                	cltq   
 904:	0f b6 84 05 ca fb ff 	movzbl -0x436(%rbp,%rax,1),%eax
 90b:	ff 
 90c:	83 c0 09             	add    $0x9,%eax
 90f:	89 c2                	mov    %eax,%edx
 911:	8b 85 bc fb ff ff    	mov    -0x444(%rbp),%eax
 917:	48 98                	cltq   
 919:	88 94 05 ca fb ff ff 	mov    %dl,-0x436(%rbp,%rax,1)
 920:	83 85 bc fb ff ff 01 	addl   $0x1,-0x444(%rbp)
 927:	8b 85 bc fb ff ff    	mov    -0x444(%rbp),%eax
 92d:	48 63 d8             	movslq %eax,%rbx
 930:	48 8d 85 ca fb ff ff 	lea    -0x436(%rbp),%rax
 937:	48 89 c7             	mov    %rax,%rdi
 93a:	e8 21 fd ff ff       	callq  660 <strlen@plt>
 93f:	48 39 c3             	cmp    %rax,%rbx
 942:	72 b8                	jb     8fc <print_msg+0x132>
 944:	48 8d 85 ca fb ff ff 	lea    -0x436(%rbp),%rax
 94b:	48 89 c7             	mov    %rax,%rdi
 94e:	e8 fd fc ff ff       	callq  650 <puts@plt>
 953:	90                   	nop
 954:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 958:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
 95f:	00 00 
 961:	74 05                	je     968 <print_msg+0x19e>
 963:	e8 08 fd ff ff       	callq  670 <__stack_chk_fail@plt>
 968:	48 81 c4 48 04 00 00 	add    $0x448,%rsp
 96f:	5b                   	pop    %rbx
 970:	5d                   	pop    %rbp
 971:	c3                   	retq   

0000000000000972 <main>:
 972:	55                   	push   %rbp
 973:	48 89 e5             	mov    %rsp,%rbp
 976:	48 83 ec 10          	sub    $0x10,%rsp
 97a:	89 7d fc             	mov    %edi,-0x4(%rbp)
 97d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 981:	48 8d 05 bc 00 00 00 	lea    0xbc(%rip),%rax        # a44 <FAIL+0xc>
 988:	48 89 05 89 06 20 00 	mov    %rax,0x200689(%rip)        # 201018 <MSG>
 98f:	b8 00 00 00 00       	mov    $0x0,%eax
 994:	e8 31 fe ff ff       	callq  7ca <print_msg>
 999:	b8 00 00 00 00       	mov    $0x0,%eax
 99e:	89 c7                	mov    %eax,%edi
 9a0:	e8 fb fc ff ff       	callq  6a0 <exit@plt>
 9a5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 9ac:	00 00 00 
 9af:	90                   	nop

00000000000009b0 <__libc_csu_init>:
 9b0:	41 57                	push   %r15
 9b2:	41 56                	push   %r14
 9b4:	49 89 d7             	mov    %rdx,%r15
 9b7:	41 55                	push   %r13
 9b9:	41 54                	push   %r12
 9bb:	4c 8d 25 ce 03 20 00 	lea    0x2003ce(%rip),%r12        # 200d90 <__frame_dummy_init_array_entry>
 9c2:	55                   	push   %rbp
 9c3:	48 8d 2d ce 03 20 00 	lea    0x2003ce(%rip),%rbp        # 200d98 <__init_array_end>
 9ca:	53                   	push   %rbx
 9cb:	41 89 fd             	mov    %edi,%r13d
 9ce:	49 89 f6             	mov    %rsi,%r14
 9d1:	4c 29 e5             	sub    %r12,%rbp
 9d4:	48 83 ec 08          	sub    $0x8,%rsp
 9d8:	48 c1 fd 03          	sar    $0x3,%rbp
 9dc:	e8 47 fc ff ff       	callq  628 <_init>
 9e1:	48 85 ed             	test   %rbp,%rbp
 9e4:	74 20                	je     a06 <__libc_csu_init+0x56>
 9e6:	31 db                	xor    %ebx,%ebx
 9e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 9ef:	00 
 9f0:	4c 89 fa             	mov    %r15,%rdx
 9f3:	4c 89 f6             	mov    %r14,%rsi
 9f6:	44 89 ef             	mov    %r13d,%edi
 9f9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 9fd:	48 83 c3 01          	add    $0x1,%rbx
 a01:	48 39 dd             	cmp    %rbx,%rbp
 a04:	75 ea                	jne    9f0 <__libc_csu_init+0x40>
 a06:	48 83 c4 08          	add    $0x8,%rsp
 a0a:	5b                   	pop    %rbx
 a0b:	5d                   	pop    %rbp
 a0c:	41 5c                	pop    %r12
 a0e:	41 5d                	pop    %r13
 a10:	41 5e                	pop    %r14
 a12:	41 5f                	pop    %r15
 a14:	c3                   	retq   
 a15:	90                   	nop
 a16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 a1d:	00 00 00 

0000000000000a20 <__libc_csu_fini>:
 a20:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000a24 <_fini>:
 a24:	48 83 ec 08          	sub    $0x8,%rsp
 a28:	48 83 c4 08          	add    $0x8,%rsp
 a2c:	c3                   	retq   
