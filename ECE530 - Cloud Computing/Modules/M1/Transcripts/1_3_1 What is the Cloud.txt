 >> Let us discuss today, what is the cloud. We've been discussing about the cloud computing and how we want people to start thinking about migrating from data centers to the cloud. What is really the definition of the cloud? The basic characteristics of the cloud include the service models. These are divided three categories, the Infrastructure as a Service, the Platform as a Service, and the Software as a Service. Then we do have the deployment models, which can vary between public, private, community, and hybrid. These are the common characteristics. The cloud computing common characteristic is that the cloud is a massive scale. That means that you have many companies, and we need huge infrastructure to support these enterprises. You have homogeneity, you have virtualization, that means that you are supported by virtualized hardware, so you don't really touch the hardware itself when you use the cloud, but that you are touching a virtualized environment. It is based on low cost software. That means that you build on top of low-cost software. It is resilient. That means that if something happens to the cloud, the cloud doesn't really go down. You try to avoid what we call single-point of failures, though it is a more resilient infrastructure. It's geographically distributed, and the reason it is, because it has to be resilient. For example, [NOISE] cloud can be deployed in multiple datacenters. One can be, let's say US East or US West, or EU, or Asia Pacific and so forth. You try to distribute your cloud into multiple datacenters such that if there is a localized issue, you can go around it. It's based on service orientation. We can discuss about, how do I now offer Infrastructure as a Service? How do I offer Platform as a Service? How do I offer Software as a Service? Of course, it provides advanced security. The reason it provides advanced security is because if you want to really trust the cloud, you have to be able to also trust the fact that somebody else is now holding your data and your critical infrastructure. Some of the essential characteristics is the On Demand Self-Service. That means that you use it as much as you want, and you can decommission or de-provision whatever resources you're not using. You need to have broad network access to access the cloud itself. You have a common resource pooling. That means that it's a common infrastructure with many resources and these resources are shared across many people. It is based on rapid elasticity. That means that when you really want extra infrastructure, you can really get that, and of course, measured services. That means that whatever you are actually using, you can have a metric built out of it, so you can really capture the progress, how much you use, how much you have to pay, and so forth. A few years back, NIST created this working definition of cloud computing, which is the essential characteristics we just discussed. The service model orientation, which is the Software as a Service, the Platform as a Service, and the Infrastructure as a Service, and then the independent deployment models that one can deploy the cloud, which is public, private, hybrid, and community. When we discussed about having an On-Premise datacenter, which is the first column here, you pretty much have to manage everything, from networking, to storage, to server hardware, virtualization, servers, database, security and integration, runtimes, and applications. You really have to do a lot of work. When we think about Infrastructure as a Service, what you really do is, you let the cloud provider provide you the servers, which run on virtualization, so virtualization environment, which runs on an actual hardware, which requires storage to store the data, and networking to connect those systems. The only things you need to manage, in this case, as a user of the cloud, is the application, the runtime, the security integration, the databases. Now when we move to the Platform as a Service, now effectively the runtime, the security, and database, are offered as is from the cloud vendor, so you really only now manage your application and how it runs and interacts on top of these runtimes and securities and database frameworks. When we think about Software as a Service we're effectively having a console a UI where we access a specific software. For example, if you have doctors, they go and access a platform where they can enter the data for the patients and can be stored in a centralized cloud facility. Effectively they don't have to create APIs, they don't have to do runtime, they don't really need to know what's the database in the background. The only thing they need to know is going towards a platform or a UI in which they can enter this data. Cloud computing, or in simpler shorthand, the cloud, as we refer it, also focuses on maximizing the effectiveness of the shared resources. Cloud resources are usually not only shared by multiple users, but are also dynamically reallocated per demand. You really need some resources, you get it when you need it, and when you don't need it, you decommission it so that either somebody else can use it or you don't have to pay for it. For example, a cloud computer facility that serves European users during European business hours with a specific application, let's assume this is email, may reallocate the same resources to serve North American users during North America's business hours with different application, let's say a web server. What we're trying to say here is that you can provision instances to serve your emails during working hours in Europe, but during those off-working hours you can serve North American traffic, which is a web service. The application doesn't really matter, the resources underlying like virtualization resources is what moves left and right.