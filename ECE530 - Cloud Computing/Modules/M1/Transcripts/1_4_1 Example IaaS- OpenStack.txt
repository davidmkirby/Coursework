 >> So let's go and see an example of an infrastructure as a service. So we'll start from the lower level of the Stack of the Cloud computing, move forward in the platform, and then the software as a service. But let's start with an example of infrastructure as a service. So the most well-known infrastructure service is probably Amazon Web Services. You go there, you reserve an instance. Same with Google, same with Microsoft. But apparently, a number of companies have agreed to create a corresponding open-source language called OpenStack. So OpenStack is an open-source Cloud computing platform. It is an infrastructure service solution. It supports many independent services. OpenStack was a joint Cloud computing project. It started with Rackspace and NASA and aimed to provide a new infrastructure as a service. It lands in 2010. Today, it's a community-based supported open-source project with about 15,000 people, 136 countries, and more than a multiple hundreds of companies supporting it. So OpenStack is based on Python, so it has more than one million lines of code of Python. More than 200 companies support it from Ubuntu, Rackspace, HP, Red Hat, Cisco, Intel, IBM, SUSE, VMware, Dell, all these companies that effectively will take them significant amount of time to deploy a new infrastructure service. They came together and collaborated to create OpenStack. So the high-level architecture is we have the central dashboard, the same way as you have in every kind of Cloud computing service. Then you have independent services where this networking service, your block storage service, your compute service, your image service, your object storage service, or your identity service. So dashboard is where you actually see all these resources and identity is the sources. Now, to be able to access these resources or even to view them in the dashboard, you have to have these privileges or the authentication. So identity effectively feeds each of the services so that we can define roles and access capabilities for specific users for each of these specific services, and all these services now go back and present what they have to do in the dashboard. So definitely, OpenStack is being a very, very interesting project compared to a lot of what we have seen. Now, the networking service as you can see feeds the compute service because now, if you have an instance, you need to configure a virtual network interfaces. Same with block storage. If you have an instance, you want to attach block storage so you can save your data. Then the compute service. Once you store the data in the compute service, now you can back them up in an object or in the object storage so that's why that computer feeds these other services. So anyway, this is the genetic architecture of OpenStack. Definitely an interesting project and definitely an evolving idea.