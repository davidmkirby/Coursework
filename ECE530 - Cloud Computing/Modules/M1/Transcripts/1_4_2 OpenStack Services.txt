 >> Let's go back to see now the OpenStack Services. The OpenStack Services are multiple independent components and multiple independent services. The first one is the compute, instead it's called nova, that's the code name. It's an on-demand network of virtualized machines, AP is like EC2 instances in AWS. KVM and Xen are the two available choices for hypervisor technology or you can even use containers like Docker. As you can see in the picture below, you have the instance name which is called test, then you have the operating system that you are adding. Then the IP address you have allocated the size, what type of virtual machine this is. The keypad if, for example, you have a specific key that you want to access [inaudible] mode. The status if it is active or inactive, the availability zone, and the task and whether it's running or down and so forth, and how many minutes has been up. Then you have different steps, different axis. I create snapshots and so forth. This is what you see in the UI when you provision an instance. Network, which is the network surface, the code name is called Neutron. It allows users to create their own networks and then attach interfaces to them, it is highly configurable, and it has a plug-in architecture. It gave about of the legacy networking called nova-network, but that actually was deprecated. So nova-network goes mostly like how do you collect instances, but then they decide to have a separate network project. It's simple and it had lack functionality like VPN, load balancing, and firewall. Neutron does have all these capabilities now. Cinder which is the block storage. Block storage is effectively the way that you attach a volumes to your instances so you can save data. It's like a network attached volume. It provides persistent block level storage devices that you can use an OpenStack compute instances, and these have to be attached effectively to any instance of virtual machine. The project itself, the UI, you can manage the creation. They attach and detach of the block devices to those instances and servers. You can see that here in the UI, for example, you have a volume of one gigabyte with dev test1, it's currently used and it's attached to test WAN on this specific mounted or this specific folder and on the specific availability zone. The next project is called swift, it's for object storage. This object storage is effective when it's not a network attach thing, but rather you have to call an API to access, which means that it's usually used when you want to backup data. So let's say I have this backup, I call an API or backup this data and then this goes in a specific container. It accepts file to upload, modifications to metadata or container creation. The swift architecture is very distributed in order to prevent single point of failures and you can scale it horizontally. For example, you need more storage space, you can just add it and, of course, if you backup the data, you don't want to lose them. That file it has to avoid this single point of failures. Identity is the keystone, that's the name of the service called keystone. It provides a single point of integration for OpenStack policy, catalog, token, and authentication. This is actually the hardest one to configure because once you mess it up, you may not be able to access your resources. Of course, it supports multiple forms of authentication, including standard user name and password credentials, a token-based system, and AWS-style, user, tenant, and role. The next one is they both store the code, they glance. It provides discovery, registration, and delivery services for disk and server images. It can also be used to store and catalog at an unlimited number of backups. So this is more like longer term backups where you would store them and stay there forever. So this is the image store called the glance. Last but not least, the dashboard where you access all these resources. The code name for that is called horizon. It provides administrators and users a GUI, a graphical user interface to access, provision, and automate those cloud-based resources that you have provisioned before. So very interesting. Now, if you start comparing the resources and the code name using a nova like EC2, neutron like a VPC, cinder is like elastic block storage, swift is like S3, glance is like an AMI, horizon is like console, and keystone is like IAM roles in AWS. So just to give you an idea about if you've ever had experience with AWS, now you can actually relate those code devs in OpenStack.