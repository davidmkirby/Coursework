So let us now see the benefits of cloud computing. So the solution to the problem we have mentioned in our earlier lectures about the data center is to outsource the data centers. The reason you want to go do that is because, effectively, data centers does not help with economies of scale, right? So if it is long investment that you do in a specific infrastructure, you cannot really move it around when you want. But with cloud computing, we mentioned before about how we can really follow economies of scale. As we grow, our capabilities of computing also grows. Because of scale, now we can afford specialized skills, we don't have spend our specialized skills, salaries into things that are hard to move. More of, we see more and more applications getting really big in the website, like Facebook, Google, Netflix, Amazon, and so forth. So those web developers cannot concentrate on their core competencies instead of giving them, and give them a market advantage, right? Instead of focusing on, let's say, deploying data centers. At the same time, delay time to start from having an idea to having a production system is really, really small nowadays. In addition, you don't really need a lot of infrastructure to support your computing resources in the beginning. Because now, you have lower capital requirements. At the same time, computing power becomes a commodity, as did electric power in 20th century, and that's very, very important. So the benefits of cloud computing, it can reduce capital and operational expenses. You're no longer required to make large up-front capital investments to data centers. You eliminate need to plan ahead for provisioning. And you allow companies to start small, increase as they move ahead and as they go, which is the pay-as-you-go model. You simplify application development and management by common programming models across mobile, browser, client, server, and cloud. Access to strong ecosystem of widely deployed applications. And now, you have integrated with existing IT asset, like software or assets. The cloud benefits, the cloud offers low, pay-as-you-go pricing with no up-front expenses or long-term commitments. This is important, because now, you don't have to have any other kind of commitments, or you don't have to have any other SLAs or SLOs. Cloud vendors build and manage global infrastructure at scale. They pass the cost saving benefits onto the clients into the form of lower prices. What we have been seeing in the last few years around the private providers is that cloud providers, let's say, update their CPU's, update their networking, update their storage. And because they do that at that massive scale, the cost on a per-entity, or upon company, is way, way smaller than it would be to update your own infrastructure to the latest, let's say, CPU and so forth. With efficiencies of cloud scale and expertise, cloud vendors have now been able to lower their prices. Now, once you guys go up in the market, out in the market, and to become cloud engineers? You have to make into consideration as well that this is not your data center. And maintenance can happen without you knowing anything, so your instances will die. You have have to use shared resources, and this is a problem. Now your resources are not just used by you, but many other entities, so you're selling those resources. The architecture maintenance as well, you don't really own it. But even if you owned it, architecture evolves over the time and over the years, and therefore changes are inevitable. And of course, you never see the lights. So the common idea to have when you use the cloud, is that you must not trust it. You must assume that any failure can happen in the cloud, and failures will happen. Because it's not your own resource, but failures happen also in data centers. It's the way cloud engineers have to think, they have to think that failures would happen, instances will die. Availability zones, or let's say, data centers may go be down at any point of time. And therefore, they have to create systems that will be able to scale, and as well as handle situations with failures.